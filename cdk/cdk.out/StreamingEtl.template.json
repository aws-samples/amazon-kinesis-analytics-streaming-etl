{
  "Description": "Creates a sample streaming ETL pipeline based on Apache Flink and Amazon Kinesis Data Analytics that reads data from a Kinesis data stream and persists it to Amazon S3 (shausma-kda-streaming-etl-2021-02-08)",
  "Resources": {
    "Bucket83908E77": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "LifecycleConfiguration": {
          "Rules": [
            {
              "AbortIncompleteMultipartUpload": {
                "DaysAfterInitiation": 7
              },
              "Status": "Enabled"
            }
          ]
        },
        "MetricsConfigurations": [
          {
            "Id": "EntireBucket"
          }
        ],
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        },
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/Bucket/Resource"
      }
    },
    "EmptyBucketEmptyBucketLambdaServiceRole67452BDD": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/EmptyBucket/EmptyBucketLambda/ServiceRole/Resource"
      }
    },
    "EmptyBucketEmptyBucketLambdaServiceRoleDefaultPolicy0872AADF": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Bucket83908E77",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "EmptyBucketEmptyBucketLambdaServiceRoleDefaultPolicy0872AADF",
        "Roles": [
          {
            "Ref": "EmptyBucketEmptyBucketLambdaServiceRole67452BDD"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/EmptyBucket/EmptyBucketLambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "EmptyBucketEmptyBucketLambdaD0E9E93D": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "import os\nimport json\nimport boto3\nimport traceback\nimport cfnresponse\n\ndef empty_bucket(event, context):\n    bucket_name = os.environ['bucket_name']\n\n    try:\n        if event['RequestType'] == 'Delete':\n            print(\"empty bucket: \" + bucket_name)\n            \n            bucket = boto3.resource('s3').Bucket(bucket_name)\n            bucket.object_versions.delete()\n\n        cfnresponse.send(event, context, cfnresponse.SUCCESS, {})\n    except Exception:\n        traceback.print_exc()\n\n        cfnresponse.send(event, context, cfnresponse.FAILED, {})"
        },
        "Role": {
          "Fn::GetAtt": [
            "EmptyBucketEmptyBucketLambdaServiceRole67452BDD",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "bucket_name": {
              "Ref": "Bucket83908E77"
            }
          }
        },
        "Handler": "index.empty_bucket",
        "MemorySize": 512,
        "Runtime": "python3.7",
        "Timeout": 900
      },
      "DependsOn": [
        "EmptyBucketEmptyBucketLambdaServiceRoleDefaultPolicy0872AADF",
        "EmptyBucketEmptyBucketLambdaServiceRole67452BDD"
      ],
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/EmptyBucket/EmptyBucketLambda/Resource"
      }
    },
    "EmptyBucketEmptyBucketResource78AC492E": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "EmptyBucketEmptyBucketLambdaD0E9E93D",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/EmptyBucket/EmptyBucketResource"
      }
    },
    "BuildArtifactsKinesisReplayBuildPipelineDownloadLambdaServiceRole2EE1C83A": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/KinesisReplayBuildPipeline/DownloadLambda/ServiceRole/Resource"
      }
    },
    "BuildArtifactsKinesisReplayBuildPipelineDownloadLambdaServiceRoleDefaultPolicy6401CF0F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "Bucket83908E77",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BuildArtifactsKinesisReplayBuildPipelineDownloadLambdaServiceRoleDefaultPolicy6401CF0F",
        "Roles": [
          {
            "Ref": "BuildArtifactsKinesisReplayBuildPipelineDownloadLambdaServiceRole2EE1C83A"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/KinesisReplayBuildPipeline/DownloadLambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "BuildArtifactsKinesisReplayBuildPipelineDownloadLambda785E80B0": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "import os\nimport json\nimport boto3\nimport traceback\nimport cfnresponse\nimport urllib.request\n\ns3client = boto3.client('s3')\ncode_pipeline = boto3.client('codepipeline')\n\n\ndef download_sources(event, context):\n    url = os.environ['url']\n    bucket = os.environ['bucket']\n    key = os.environ['key']\n\n    try:\n        if event['RequestType'] != 'Delete':\n            req = urllib.request.Request(url)\n            response = urllib.request.urlopen(req)\n\n            s3client.put_object(Bucket=bucket, Key=key, Body=response.read())\n\n        cfnresponse.send(event, context, cfnresponse.SUCCESS, {})\n    except Exception:\n        traceback.print_exc()\n\n        cfnresponse.send(event, context, cfnresponse.FAILED, {})\n\n\ndef notify_build_success(event, context):\n    job_id = event['CodePipeline.job']['id']\n\n    url = os.environ['waitHandleUrl']\n    headers = { \"Content-Type\": \"\" }\n    data = { \"Status\": \"SUCCESS\", \"Reason\": \"Compilation Succeeded\", \"UniqueId\": job_id, \"Data\": \"Compilation Succeeded\" }\n\n    try:\n        req = urllib.request.Request(url, headers=headers, data=bytes(json.dumps(data), encoding=\"utf-8\"), method='PUT')\n        response = urllib.request.urlopen(req)\n\n        code_pipeline.put_job_success_result(jobId=job_id)\n    except Exception:\n        traceback.print_exc()\n\n        code_pipeline.put_job_failure_result(jobId=job_id, failureDetails={'type': 'JobFailed'})\n"
        },
        "Role": {
          "Fn::GetAtt": [
            "BuildArtifactsKinesisReplayBuildPipelineDownloadLambdaServiceRole2EE1C83A",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "url": "https://github.com/aws-samples/amazon-kinesis-replay/archive/release-0.1.1.zip",
            "bucket": {
              "Ref": "Bucket83908E77"
            },
            "key": "sources/amazon-kinesis-replay-release-0.1.1.zip"
          }
        },
        "Handler": "index.download_sources",
        "Runtime": "python3.7",
        "Timeout": 30
      },
      "DependsOn": [
        "BuildArtifactsKinesisReplayBuildPipelineDownloadLambdaServiceRoleDefaultPolicy6401CF0F",
        "BuildArtifactsKinesisReplayBuildPipelineDownloadLambdaServiceRole2EE1C83A"
      ],
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/KinesisReplayBuildPipeline/DownloadLambda/Resource"
      }
    },
    "BuildArtifactsKinesisReplayBuildPipelineDownloadLambdaResourceD172C062": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "BuildArtifactsKinesisReplayBuildPipelineDownloadLambda785E80B0",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/KinesisReplayBuildPipeline/DownloadLambdaResource/Default"
      }
    },
    "BuildArtifactsKinesisReplayBuildPipelineCodebuildProjectRoleC03B309E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/KinesisReplayBuildPipeline/CodebuildProject/Role/Resource"
      }
    },
    "BuildArtifactsKinesisReplayBuildPipelineCodebuildProjectRoleDefaultPolicy603A0685": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "BuildArtifactsKinesisReplayBuildPipelineCodebuildProjectE4AAC06C"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "BuildArtifactsKinesisReplayBuildPipelineCodebuildProjectE4AAC06C"
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":report-group/",
                    {
                      "Ref": "BuildArtifactsKinesisReplayBuildPipelineCodebuildProjectE4AAC06C"
                    },
                    "-*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Bucket83908E77",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BuildArtifactsKinesisReplayBuildPipelineCodebuildProjectRoleDefaultPolicy603A0685",
        "Roles": [
          {
            "Ref": "BuildArtifactsKinesisReplayBuildPipelineCodebuildProjectRoleC03B309E"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/KinesisReplayBuildPipeline/CodebuildProject/Role/DefaultPolicy/Resource"
      }
    },
    "BuildArtifactsKinesisReplayBuildPipelineCodebuildProjectE4AAC06C": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE"
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/java:openjdk-11",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER"
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "BuildArtifactsKinesisReplayBuildPipelineCodebuildProjectRoleC03B309E",
            "Arn"
          ]
        },
        "Source": {
          "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"build\": {\n      \"commands\": [\n        \"cd amazon-kinesis-replay-release-0.1.1\",\n        \"mvn clean package -B\"\n      ]\n    }\n  },\n  \"artifacts\": {\n    \"files\": [\n      \"target/amazon-kinesis-replay-*.jar\"\n    ],\n    \"discard-paths\": false,\n    \"base-directory\": \"amazon-kinesis-replay-release-0.1.1\"\n  }\n}",
          "Type": "CODEPIPELINE"
        },
        "EncryptionKey": "alias/aws/s3"
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/KinesisReplayBuildPipeline/CodebuildProject/Resource"
      }
    },
    "BuildArtifactsKinesisReplayBuildPipelineWaitHandleFBBC32B4": {
      "Type": "AWS::CloudFormation::WaitConditionHandle",
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/KinesisReplayBuildPipeline/WaitHandle"
      }
    },
    "BuildArtifactsKinesisReplayBuildPipelineWaitCondition802E8F7A": {
      "Type": "AWS::CloudFormation::WaitCondition",
      "Properties": {
        "Count": 1,
        "Handle": {
          "Ref": "BuildArtifactsKinesisReplayBuildPipelineWaitHandleFBBC32B4"
        },
        "Timeout": "1200"
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/KinesisReplayBuildPipeline/WaitCondition"
      }
    },
    "BuildArtifactsKinesisReplayBuildPipelineNotifyLambdaServiceRole872E82C0": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/KinesisReplayBuildPipeline/NotifyLambda/ServiceRole/Resource"
      }
    },
    "BuildArtifactsKinesisReplayBuildPipelineNotifyLambdaServiceRoleDefaultPolicyE0F9F257": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codepipeline:PutJobSuccessResult",
                "codepipeline:PutJobFailureResult"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BuildArtifactsKinesisReplayBuildPipelineNotifyLambdaServiceRoleDefaultPolicyE0F9F257",
        "Roles": [
          {
            "Ref": "BuildArtifactsKinesisReplayBuildPipelineNotifyLambdaServiceRole872E82C0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/KinesisReplayBuildPipeline/NotifyLambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "BuildArtifactsKinesisReplayBuildPipelineNotifyLambdaC424E2CA": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "import os\nimport json\nimport boto3\nimport traceback\nimport cfnresponse\nimport urllib.request\n\ns3client = boto3.client('s3')\ncode_pipeline = boto3.client('codepipeline')\n\n\ndef download_sources(event, context):\n    url = os.environ['url']\n    bucket = os.environ['bucket']\n    key = os.environ['key']\n\n    try:\n        if event['RequestType'] != 'Delete':\n            req = urllib.request.Request(url)\n            response = urllib.request.urlopen(req)\n\n            s3client.put_object(Bucket=bucket, Key=key, Body=response.read())\n\n        cfnresponse.send(event, context, cfnresponse.SUCCESS, {})\n    except Exception:\n        traceback.print_exc()\n\n        cfnresponse.send(event, context, cfnresponse.FAILED, {})\n\n\ndef notify_build_success(event, context):\n    job_id = event['CodePipeline.job']['id']\n\n    url = os.environ['waitHandleUrl']\n    headers = { \"Content-Type\": \"\" }\n    data = { \"Status\": \"SUCCESS\", \"Reason\": \"Compilation Succeeded\", \"UniqueId\": job_id, \"Data\": \"Compilation Succeeded\" }\n\n    try:\n        req = urllib.request.Request(url, headers=headers, data=bytes(json.dumps(data), encoding=\"utf-8\"), method='PUT')\n        response = urllib.request.urlopen(req)\n\n        code_pipeline.put_job_success_result(jobId=job_id)\n    except Exception:\n        traceback.print_exc()\n\n        code_pipeline.put_job_failure_result(jobId=job_id, failureDetails={'type': 'JobFailed'})\n"
        },
        "Role": {
          "Fn::GetAtt": [
            "BuildArtifactsKinesisReplayBuildPipelineNotifyLambdaServiceRole872E82C0",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "waitHandleUrl": {
              "Ref": "BuildArtifactsKinesisReplayBuildPipelineWaitHandleFBBC32B4"
            }
          }
        },
        "Handler": "index.notify_build_success",
        "Runtime": "python3.7",
        "Timeout": 10
      },
      "DependsOn": [
        "BuildArtifactsKinesisReplayBuildPipelineNotifyLambdaServiceRoleDefaultPolicyE0F9F257",
        "BuildArtifactsKinesisReplayBuildPipelineNotifyLambdaServiceRole872E82C0"
      ],
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/KinesisReplayBuildPipeline/NotifyLambda/Resource"
      }
    },
    "BuildArtifactsKinesisReplayBuildPipelineCodePipelineRoleFFB4C59C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codepipeline.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/KinesisReplayBuildPipeline/CodePipeline/Role/Resource"
      }
    },
    "BuildArtifactsKinesisReplayBuildPipelineCodePipelineRoleDefaultPolicy0BC9183A": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Bucket83908E77",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "BuildArtifactsKinesisReplayBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRoleD7F955A7",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "BuildArtifactsKinesisReplayBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRole93AFA060",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "BuildArtifactsKinesisReplayBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRole75CA52CC",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "BuildArtifactsKinesisReplayBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleFD7520EA",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BuildArtifactsKinesisReplayBuildPipelineCodePipelineRoleDefaultPolicy0BC9183A",
        "Roles": [
          {
            "Ref": "BuildArtifactsKinesisReplayBuildPipelineCodePipelineRoleFFB4C59C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/KinesisReplayBuildPipeline/CodePipeline/Role/DefaultPolicy/Resource"
      }
    },
    "BuildArtifactsKinesisReplayBuildPipelineCodePipelineD24B5A55": {
      "Type": "AWS::CodePipeline::Pipeline",
      "Properties": {
        "RoleArn": {
          "Fn::GetAtt": [
            "BuildArtifactsKinesisReplayBuildPipelineCodePipelineRoleFFB4C59C",
            "Arn"
          ]
        },
        "Stages": [
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "S3",
                  "Version": "1"
                },
                "Configuration": {
                  "S3Bucket": {
                    "Ref": "Bucket83908E77"
                  },
                  "S3ObjectKey": "sources/amazon-kinesis-replay-release-0.1.1.zip"
                },
                "Name": "SourceAction",
                "OutputArtifacts": [
                  {
                    "Name": "Artifact_Source_SourceAction"
                  }
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "BuildArtifactsKinesisReplayBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRoleD7F955A7",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              }
            ],
            "Name": "Source"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1"
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "BuildArtifactsKinesisReplayBuildPipelineCodebuildProjectE4AAC06C"
                  }
                },
                "InputArtifacts": [
                  {
                    "Name": "Artifact_Source_SourceAction"
                  }
                ],
                "Name": "BuildAction",
                "OutputArtifacts": [
                  {
                    "Name": "Artifact_Build_BuildAction"
                  }
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "BuildArtifactsKinesisReplayBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRole93AFA060",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              }
            ],
            "Name": "Build"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "S3",
                  "Version": "1"
                },
                "Configuration": {
                  "BucketName": {
                    "Ref": "Bucket83908E77"
                  },
                  "Extract": "true"
                },
                "InputArtifacts": [
                  {
                    "Name": "Artifact_Build_BuildAction"
                  }
                ],
                "Name": "CopyAction",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "BuildArtifactsKinesisReplayBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRole75CA52CC",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              },
              {
                "ActionTypeId": {
                  "Category": "Invoke",
                  "Owner": "AWS",
                  "Provider": "Lambda",
                  "Version": "1"
                },
                "Configuration": {
                  "FunctionName": {
                    "Ref": "BuildArtifactsKinesisReplayBuildPipelineNotifyLambdaC424E2CA"
                  }
                },
                "Name": "InvokeAction",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "BuildArtifactsKinesisReplayBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleFD7520EA",
                    "Arn"
                  ]
                },
                "RunOrder": 2
              }
            ],
            "Name": "Copy"
          }
        ],
        "ArtifactStore": {
          "Location": {
            "Ref": "Bucket83908E77"
          },
          "Type": "S3"
        }
      },
      "DependsOn": [
        "BuildArtifactsKinesisReplayBuildPipelineCodePipelineRoleDefaultPolicy0BC9183A",
        "BuildArtifactsKinesisReplayBuildPipelineCodePipelineRoleFFB4C59C"
      ],
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/KinesisReplayBuildPipeline/CodePipeline/Resource"
      }
    },
    "BuildArtifactsKinesisReplayBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRoleD7F955A7": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/KinesisReplayBuildPipeline/CodePipeline/Source/SourceAction/CodePipelineActionRole/Resource"
      }
    },
    "BuildArtifactsKinesisReplayBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRoleDefaultPolicy08095640": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Bucket83908E77",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Bucket83908E77",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BuildArtifactsKinesisReplayBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRoleDefaultPolicy08095640",
        "Roles": [
          {
            "Ref": "BuildArtifactsKinesisReplayBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRoleD7F955A7"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/KinesisReplayBuildPipeline/CodePipeline/Source/SourceAction/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "BuildArtifactsKinesisReplayBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRole93AFA060": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/KinesisReplayBuildPipeline/CodePipeline/Build/BuildAction/CodePipelineActionRole/Resource"
      }
    },
    "BuildArtifactsKinesisReplayBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRoleDefaultPolicy196AAC1A": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "BuildArtifactsKinesisReplayBuildPipelineCodebuildProjectE4AAC06C",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BuildArtifactsKinesisReplayBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRoleDefaultPolicy196AAC1A",
        "Roles": [
          {
            "Ref": "BuildArtifactsKinesisReplayBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRole93AFA060"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/KinesisReplayBuildPipeline/CodePipeline/Build/BuildAction/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "BuildArtifactsKinesisReplayBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRole75CA52CC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/KinesisReplayBuildPipeline/CodePipeline/Copy/CopyAction/CodePipelineActionRole/Resource"
      }
    },
    "BuildArtifactsKinesisReplayBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRoleDefaultPolicyB138B355": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Bucket83908E77",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Bucket83908E77",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BuildArtifactsKinesisReplayBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRoleDefaultPolicyB138B355",
        "Roles": [
          {
            "Ref": "BuildArtifactsKinesisReplayBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRole75CA52CC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/KinesisReplayBuildPipeline/CodePipeline/Copy/CopyAction/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "BuildArtifactsKinesisReplayBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleFD7520EA": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/KinesisReplayBuildPipeline/CodePipeline/Copy/InvokeAction/CodePipelineActionRole/Resource"
      }
    },
    "BuildArtifactsKinesisReplayBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleDefaultPolicy93069DDE": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:ListFunctions",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "BuildArtifactsKinesisReplayBuildPipelineNotifyLambdaC424E2CA",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BuildArtifactsKinesisReplayBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleDefaultPolicy93069DDE",
        "Roles": [
          {
            "Ref": "BuildArtifactsKinesisReplayBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleFD7520EA"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/KinesisReplayBuildPipeline/CodePipeline/Copy/InvokeAction/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "BuildArtifactsFlinkConsumerDownloadLambdaServiceRole493C8F8C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/FlinkConsumer/DownloadLambda/ServiceRole/Resource"
      }
    },
    "BuildArtifactsFlinkConsumerDownloadLambdaServiceRoleDefaultPolicyBE72E57B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "Bucket83908E77",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BuildArtifactsFlinkConsumerDownloadLambdaServiceRoleDefaultPolicyBE72E57B",
        "Roles": [
          {
            "Ref": "BuildArtifactsFlinkConsumerDownloadLambdaServiceRole493C8F8C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/FlinkConsumer/DownloadLambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "BuildArtifactsFlinkConsumerDownloadLambda9FE92F49": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "import os\nimport json\nimport boto3\nimport traceback\nimport cfnresponse\nimport urllib.request\n\ns3client = boto3.client('s3')\ncode_pipeline = boto3.client('codepipeline')\n\n\ndef download_sources(event, context):\n    url = os.environ['url']\n    bucket = os.environ['bucket']\n    key = os.environ['key']\n\n    try:\n        if event['RequestType'] != 'Delete':\n            req = urllib.request.Request(url)\n            response = urllib.request.urlopen(req)\n\n            s3client.put_object(Bucket=bucket, Key=key, Body=response.read())\n\n        cfnresponse.send(event, context, cfnresponse.SUCCESS, {})\n    except Exception:\n        traceback.print_exc()\n\n        cfnresponse.send(event, context, cfnresponse.FAILED, {})\n\n\ndef notify_build_success(event, context):\n    job_id = event['CodePipeline.job']['id']\n\n    url = os.environ['waitHandleUrl']\n    headers = { \"Content-Type\": \"\" }\n    data = { \"Status\": \"SUCCESS\", \"Reason\": \"Compilation Succeeded\", \"UniqueId\": job_id, \"Data\": \"Compilation Succeeded\" }\n\n    try:\n        req = urllib.request.Request(url, headers=headers, data=bytes(json.dumps(data), encoding=\"utf-8\"), method='PUT')\n        response = urllib.request.urlopen(req)\n\n        code_pipeline.put_job_success_result(jobId=job_id)\n    except Exception:\n        traceback.print_exc()\n\n        code_pipeline.put_job_failure_result(jobId=job_id, failureDetails={'type': 'JobFailed'})\n"
        },
        "Role": {
          "Fn::GetAtt": [
            "BuildArtifactsFlinkConsumerDownloadLambdaServiceRole493C8F8C",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "url": "https://github.com/aws-samples/amazon-kinesis-analytics-streaming-etl/archive/release-0.1.1.zip",
            "bucket": {
              "Ref": "Bucket83908E77"
            },
            "key": "sources/amazon-kinesis-analytics-streaming-etl-release-0.1.1.zip"
          }
        },
        "Handler": "index.download_sources",
        "Runtime": "python3.7",
        "Timeout": 30
      },
      "DependsOn": [
        "BuildArtifactsFlinkConsumerDownloadLambdaServiceRoleDefaultPolicyBE72E57B",
        "BuildArtifactsFlinkConsumerDownloadLambdaServiceRole493C8F8C"
      ],
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/FlinkConsumer/DownloadLambda/Resource"
      }
    },
    "BuildArtifactsFlinkConsumerDownloadLambdaResource977A6E27": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "BuildArtifactsFlinkConsumerDownloadLambda9FE92F49",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/FlinkConsumer/DownloadLambdaResource/Default"
      }
    },
    "BuildArtifactsFlinkConsumerCodebuildProjectRoleEB3F07B4": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/FlinkConsumer/CodebuildProject/Role/Resource"
      }
    },
    "BuildArtifactsFlinkConsumerCodebuildProjectRoleDefaultPolicy640BFED8": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "BuildArtifactsFlinkConsumerCodebuildProject153C290A"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "BuildArtifactsFlinkConsumerCodebuildProject153C290A"
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":report-group/",
                    {
                      "Ref": "BuildArtifactsFlinkConsumerCodebuildProject153C290A"
                    },
                    "-*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Bucket83908E77",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BuildArtifactsFlinkConsumerCodebuildProjectRoleDefaultPolicy640BFED8",
        "Roles": [
          {
            "Ref": "BuildArtifactsFlinkConsumerCodebuildProjectRoleEB3F07B4"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/FlinkConsumer/CodebuildProject/Role/DefaultPolicy/Resource"
      }
    },
    "BuildArtifactsFlinkConsumerCodebuildProject153C290A": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE"
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/java:openjdk-11",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER"
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "BuildArtifactsFlinkConsumerCodebuildProjectRoleEB3F07B4",
            "Arn"
          ]
        },
        "Source": {
          "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"build\": {\n      \"commands\": [\n        \"cd amazon-kinesis-analytics-streaming-etl-release-0.1.1\",\n        \"mvn clean package -B\"\n      ]\n    }\n  },\n  \"artifacts\": {\n    \"files\": [\n      \"target/amazon-kinesis-analytics-streaming-etl-*.jar\"\n    ],\n    \"discard-paths\": false,\n    \"base-directory\": \"amazon-kinesis-analytics-streaming-etl-release-0.1.1\"\n  }\n}",
          "Type": "CODEPIPELINE"
        },
        "EncryptionKey": "alias/aws/s3"
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/FlinkConsumer/CodebuildProject/Resource"
      }
    },
    "BuildArtifactsFlinkConsumerWaitHandle489E40B6": {
      "Type": "AWS::CloudFormation::WaitConditionHandle",
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/FlinkConsumer/WaitHandle"
      }
    },
    "BuildArtifactsFlinkConsumerWaitCondition4456F317": {
      "Type": "AWS::CloudFormation::WaitCondition",
      "Properties": {
        "Count": 1,
        "Handle": {
          "Ref": "BuildArtifactsFlinkConsumerWaitHandle489E40B6"
        },
        "Timeout": "1200"
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/FlinkConsumer/WaitCondition"
      }
    },
    "BuildArtifactsFlinkConsumerNotifyLambdaServiceRoleE22572DE": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/FlinkConsumer/NotifyLambda/ServiceRole/Resource"
      }
    },
    "BuildArtifactsFlinkConsumerNotifyLambdaServiceRoleDefaultPolicyA1F66937": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codepipeline:PutJobSuccessResult",
                "codepipeline:PutJobFailureResult"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BuildArtifactsFlinkConsumerNotifyLambdaServiceRoleDefaultPolicyA1F66937",
        "Roles": [
          {
            "Ref": "BuildArtifactsFlinkConsumerNotifyLambdaServiceRoleE22572DE"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/FlinkConsumer/NotifyLambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "BuildArtifactsFlinkConsumerNotifyLambda7C596CB5": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "import os\nimport json\nimport boto3\nimport traceback\nimport cfnresponse\nimport urllib.request\n\ns3client = boto3.client('s3')\ncode_pipeline = boto3.client('codepipeline')\n\n\ndef download_sources(event, context):\n    url = os.environ['url']\n    bucket = os.environ['bucket']\n    key = os.environ['key']\n\n    try:\n        if event['RequestType'] != 'Delete':\n            req = urllib.request.Request(url)\n            response = urllib.request.urlopen(req)\n\n            s3client.put_object(Bucket=bucket, Key=key, Body=response.read())\n\n        cfnresponse.send(event, context, cfnresponse.SUCCESS, {})\n    except Exception:\n        traceback.print_exc()\n\n        cfnresponse.send(event, context, cfnresponse.FAILED, {})\n\n\ndef notify_build_success(event, context):\n    job_id = event['CodePipeline.job']['id']\n\n    url = os.environ['waitHandleUrl']\n    headers = { \"Content-Type\": \"\" }\n    data = { \"Status\": \"SUCCESS\", \"Reason\": \"Compilation Succeeded\", \"UniqueId\": job_id, \"Data\": \"Compilation Succeeded\" }\n\n    try:\n        req = urllib.request.Request(url, headers=headers, data=bytes(json.dumps(data), encoding=\"utf-8\"), method='PUT')\n        response = urllib.request.urlopen(req)\n\n        code_pipeline.put_job_success_result(jobId=job_id)\n    except Exception:\n        traceback.print_exc()\n\n        code_pipeline.put_job_failure_result(jobId=job_id, failureDetails={'type': 'JobFailed'})\n"
        },
        "Role": {
          "Fn::GetAtt": [
            "BuildArtifactsFlinkConsumerNotifyLambdaServiceRoleE22572DE",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "waitHandleUrl": {
              "Ref": "BuildArtifactsFlinkConsumerWaitHandle489E40B6"
            }
          }
        },
        "Handler": "index.notify_build_success",
        "Runtime": "python3.7",
        "Timeout": 10
      },
      "DependsOn": [
        "BuildArtifactsFlinkConsumerNotifyLambdaServiceRoleDefaultPolicyA1F66937",
        "BuildArtifactsFlinkConsumerNotifyLambdaServiceRoleE22572DE"
      ],
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/FlinkConsumer/NotifyLambda/Resource"
      }
    },
    "BuildArtifactsFlinkConsumerCodePipelineRole922EE623": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codepipeline.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/FlinkConsumer/CodePipeline/Role/Resource"
      }
    },
    "BuildArtifactsFlinkConsumerCodePipelineRoleDefaultPolicy1D27AC5C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Bucket83908E77",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "BuildArtifactsFlinkConsumerCodePipelineSourceSourceActionCodePipelineActionRole227D512E",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "BuildArtifactsFlinkConsumerCodePipelineBuildBuildActionCodePipelineActionRoleEB440E9D",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "BuildArtifactsFlinkConsumerCodePipelineCopyCopyActionCodePipelineActionRole2B544E9F",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "BuildArtifactsFlinkConsumerCodePipelineCopyInvokeActionCodePipelineActionRoleA8BF4DF2",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BuildArtifactsFlinkConsumerCodePipelineRoleDefaultPolicy1D27AC5C",
        "Roles": [
          {
            "Ref": "BuildArtifactsFlinkConsumerCodePipelineRole922EE623"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/FlinkConsumer/CodePipeline/Role/DefaultPolicy/Resource"
      }
    },
    "BuildArtifactsFlinkConsumerCodePipelineEAF23675": {
      "Type": "AWS::CodePipeline::Pipeline",
      "Properties": {
        "RoleArn": {
          "Fn::GetAtt": [
            "BuildArtifactsFlinkConsumerCodePipelineRole922EE623",
            "Arn"
          ]
        },
        "Stages": [
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "S3",
                  "Version": "1"
                },
                "Configuration": {
                  "S3Bucket": {
                    "Ref": "Bucket83908E77"
                  },
                  "S3ObjectKey": "sources/amazon-kinesis-analytics-streaming-etl-release-0.1.1.zip"
                },
                "Name": "SourceAction",
                "OutputArtifacts": [
                  {
                    "Name": "Artifact_Source_SourceAction"
                  }
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "BuildArtifactsFlinkConsumerCodePipelineSourceSourceActionCodePipelineActionRole227D512E",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              }
            ],
            "Name": "Source"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1"
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "BuildArtifactsFlinkConsumerCodebuildProject153C290A"
                  }
                },
                "InputArtifacts": [
                  {
                    "Name": "Artifact_Source_SourceAction"
                  }
                ],
                "Name": "BuildAction",
                "OutputArtifacts": [
                  {
                    "Name": "Artifact_Build_BuildAction"
                  }
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "BuildArtifactsFlinkConsumerCodePipelineBuildBuildActionCodePipelineActionRoleEB440E9D",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              }
            ],
            "Name": "Build"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "S3",
                  "Version": "1"
                },
                "Configuration": {
                  "BucketName": {
                    "Ref": "Bucket83908E77"
                  },
                  "Extract": "true"
                },
                "InputArtifacts": [
                  {
                    "Name": "Artifact_Build_BuildAction"
                  }
                ],
                "Name": "CopyAction",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "BuildArtifactsFlinkConsumerCodePipelineCopyCopyActionCodePipelineActionRole2B544E9F",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              },
              {
                "ActionTypeId": {
                  "Category": "Invoke",
                  "Owner": "AWS",
                  "Provider": "Lambda",
                  "Version": "1"
                },
                "Configuration": {
                  "FunctionName": {
                    "Ref": "BuildArtifactsFlinkConsumerNotifyLambda7C596CB5"
                  }
                },
                "Name": "InvokeAction",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "BuildArtifactsFlinkConsumerCodePipelineCopyInvokeActionCodePipelineActionRoleA8BF4DF2",
                    "Arn"
                  ]
                },
                "RunOrder": 2
              }
            ],
            "Name": "Copy"
          }
        ],
        "ArtifactStore": {
          "Location": {
            "Ref": "Bucket83908E77"
          },
          "Type": "S3"
        }
      },
      "DependsOn": [
        "BuildArtifactsFlinkConsumerCodePipelineRoleDefaultPolicy1D27AC5C",
        "BuildArtifactsFlinkConsumerCodePipelineRole922EE623"
      ],
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/FlinkConsumer/CodePipeline/Resource"
      }
    },
    "BuildArtifactsFlinkConsumerCodePipelineSourceSourceActionCodePipelineActionRole227D512E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/FlinkConsumer/CodePipeline/Source/SourceAction/CodePipelineActionRole/Resource"
      }
    },
    "BuildArtifactsFlinkConsumerCodePipelineSourceSourceActionCodePipelineActionRoleDefaultPolicyE6531A3C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Bucket83908E77",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Bucket83908E77",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BuildArtifactsFlinkConsumerCodePipelineSourceSourceActionCodePipelineActionRoleDefaultPolicyE6531A3C",
        "Roles": [
          {
            "Ref": "BuildArtifactsFlinkConsumerCodePipelineSourceSourceActionCodePipelineActionRole227D512E"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/FlinkConsumer/CodePipeline/Source/SourceAction/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "BuildArtifactsFlinkConsumerCodePipelineBuildBuildActionCodePipelineActionRoleEB440E9D": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/FlinkConsumer/CodePipeline/Build/BuildAction/CodePipelineActionRole/Resource"
      }
    },
    "BuildArtifactsFlinkConsumerCodePipelineBuildBuildActionCodePipelineActionRoleDefaultPolicyF3F2FD4C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "BuildArtifactsFlinkConsumerCodebuildProject153C290A",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BuildArtifactsFlinkConsumerCodePipelineBuildBuildActionCodePipelineActionRoleDefaultPolicyF3F2FD4C",
        "Roles": [
          {
            "Ref": "BuildArtifactsFlinkConsumerCodePipelineBuildBuildActionCodePipelineActionRoleEB440E9D"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/FlinkConsumer/CodePipeline/Build/BuildAction/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "BuildArtifactsFlinkConsumerCodePipelineCopyCopyActionCodePipelineActionRole2B544E9F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/FlinkConsumer/CodePipeline/Copy/CopyAction/CodePipelineActionRole/Resource"
      }
    },
    "BuildArtifactsFlinkConsumerCodePipelineCopyCopyActionCodePipelineActionRoleDefaultPolicy7F0CBF80": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Bucket83908E77",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Bucket83908E77",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BuildArtifactsFlinkConsumerCodePipelineCopyCopyActionCodePipelineActionRoleDefaultPolicy7F0CBF80",
        "Roles": [
          {
            "Ref": "BuildArtifactsFlinkConsumerCodePipelineCopyCopyActionCodePipelineActionRole2B544E9F"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/FlinkConsumer/CodePipeline/Copy/CopyAction/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "BuildArtifactsFlinkConsumerCodePipelineCopyInvokeActionCodePipelineActionRoleA8BF4DF2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/FlinkConsumer/CodePipeline/Copy/InvokeAction/CodePipelineActionRole/Resource"
      }
    },
    "BuildArtifactsFlinkConsumerCodePipelineCopyInvokeActionCodePipelineActionRoleDefaultPolicy6599BED4": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:ListFunctions",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "BuildArtifactsFlinkConsumerNotifyLambda7C596CB5",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BuildArtifactsFlinkConsumerCodePipelineCopyInvokeActionCodePipelineActionRoleDefaultPolicy6599BED4",
        "Roles": [
          {
            "Ref": "BuildArtifactsFlinkConsumerCodePipelineCopyInvokeActionCodePipelineActionRoleA8BF4DF2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/BuildArtifacts/FlinkConsumer/CodePipeline/Copy/InvokeAction/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "InputStreamCFB159EA": {
      "Type": "AWS::Kinesis::Stream",
      "Properties": {
        "ShardCount": 16,
        "RetentionPeriodHours": 24,
        "StreamEncryption": {
          "Fn::If": [
            "AwsCdkKinesisEncryptedStreamsUnsupportedRegions",
            {
              "Ref": "AWS::NoValue"
            },
            {
              "EncryptionType": "KMS",
              "KeyId": "alias/aws/kinesis"
            }
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/InputStream/Resource"
      }
    },
    "KdaLogGroup88624CAF": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": 7
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/KdaLogGroup/Resource"
      }
    },
    "KdaLogStream7DC95165": {
      "Type": "AWS::Logs::LogStream",
      "Properties": {
        "LogGroupName": {
          "Ref": "KdaLogGroup88624CAF"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/KdaLogStream/Resource"
      }
    },
    "KdaRoleB7DD543E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "kinesisanalytics.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/KdaRole/Resource"
      }
    },
    "KdaRoleDefaultPolicy88A47211": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Bucket83908E77",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "InputStreamCFB159EA",
                  "Arn"
                ]
              }
            },
            {
              "Action": "kinesis:ListShards",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "InputStreamCFB159EA",
                  "Arn"
                ]
              }
            },
            {
              "Action": "cloudwatch:PutMetricData",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "logs:DescribeLogStreams",
                "logs:DescribeLogGroups"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "KdaLogGroup88624CAF",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":log-group:*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":log-group:",
                    {
                      "Ref": "KdaLogGroup88624CAF"
                    },
                    ":log-stream:",
                    {
                      "Ref": "KdaLogStream7DC95165"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "KdaRoleDefaultPolicy88A47211",
        "Roles": [
          {
            "Ref": "KdaRoleB7DD543E"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/KdaRole/DefaultPolicy/Resource"
      }
    },
    "KdaApplication": {
      "Type": "AWS::KinesisAnalyticsV2::Application",
      "Properties": {
        "RuntimeEnvironment": "FLINK-1_11",
        "ServiceExecutionRole": {
          "Fn::GetAtt": [
            "KdaRoleB7DD543E",
            "Arn"
          ]
        },
        "ApplicationConfiguration": {
          "ApplicationCodeConfiguration": {
            "CodeContent": {
              "S3ContentLocation": {
                "BucketARN": {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                "FileKey": "target/amazon-kinesis-analytics-streaming-etl-1.0-SNAPSHOT.jar"
              }
            },
            "CodeContentType": "ZIPFILE"
          },
          "ApplicationSnapshotConfiguration": {
            "SnapshotsEnabled": false
          },
          "EnvironmentProperties": {
            "PropertyGroups": [
              {
                "PropertyGroupId": "FlinkApplicationProperties",
                "PropertyMap": {
                  "OutputBucket": {
                    "Fn::Join": [
                      "",
                      [
                        "s3://",
                        {
                          "Ref": "Bucket83908E77"
                        },
                        "/streaming-etl-output/"
                      ]
                    ]
                  },
                  "ParquetConversion": true,
                  "InputKinesisStream": {
                    "Ref": "InputStreamCFB159EA"
                  }
                }
              }
            ]
          },
          "FlinkApplicationConfiguration": {
            "CheckpointConfiguration": {
              "CheckpointInterval": 60000,
              "CheckpointingEnabled": true,
              "ConfigurationType": "CUSTOM",
              "MinPauseBetweenCheckpoints": 60000
            },
            "MonitoringConfiguration": {
              "ConfigurationType": "CUSTOM",
              "LogLevel": "INFO",
              "MetricsLevel": "TASK"
            },
            "ParallelismConfiguration": {
              "AutoScalingEnabled": false,
              "ConfigurationType": "CUSTOM",
              "Parallelism": 2,
              "ParallelismPerKPU": 1
            }
          }
        },
        "ApplicationName": {
          "Ref": "AWS::StackName"
        }
      },
      "DependsOn": [
        "BuildArtifactsFlinkConsumerWaitCondition4456F317",
        "EmptyBucketEmptyBucketResource78AC492E"
      ],
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/KdaApplication"
      }
    },
    "KdsFlinkProducerLogging": {
      "Type": "AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption",
      "Properties": {
        "ApplicationName": {
          "Ref": "KdaApplication"
        },
        "CloudWatchLoggingOption": {
          "LogStreamARN": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":logs:",
                {
                  "Ref": "AWS::Region"
                },
                ":",
                {
                  "Ref": "AWS::AccountId"
                },
                ":log-group:",
                {
                  "Ref": "KdaLogGroup88624CAF"
                },
                ":log-stream:",
                {
                  "Ref": "KdaLogStream7DC95165"
                }
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/KdsFlinkProducerLogging"
      }
    },
    "VPCB9E5F0B4": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "StreamingEtl/VPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/VPC/Resource"
      }
    },
    "VPCpublicSubnet1Subnet325F50B2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/24",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "StreamingEtl/VPC/publicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/VPC/publicSubnet1/Subnet"
      }
    },
    "VPCpublicSubnet1RouteTableF591E248": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "StreamingEtl/VPC/publicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/VPC/publicSubnet1/RouteTable"
      }
    },
    "VPCpublicSubnet1RouteTableAssociationBFFA43B7": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCpublicSubnet1RouteTableF591E248"
        },
        "SubnetId": {
          "Ref": "VPCpublicSubnet1Subnet325F50B2"
        }
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/VPC/publicSubnet1/RouteTableAssociation"
      }
    },
    "VPCpublicSubnet1DefaultRoute19059ECD": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCpublicSubnet1RouteTableF591E248"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "DependsOn": [
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/VPC/publicSubnet1/DefaultRoute"
      }
    },
    "VPCpublicSubnet2Subnet2B2DFF71": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.1.0/24",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "StreamingEtl/VPC/publicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/VPC/publicSubnet2/Subnet"
      }
    },
    "VPCpublicSubnet2RouteTable55DAB1BB": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "StreamingEtl/VPC/publicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/VPC/publicSubnet2/RouteTable"
      }
    },
    "VPCpublicSubnet2RouteTableAssociation0849466B": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCpublicSubnet2RouteTable55DAB1BB"
        },
        "SubnetId": {
          "Ref": "VPCpublicSubnet2Subnet2B2DFF71"
        }
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/VPC/publicSubnet2/RouteTableAssociation"
      }
    },
    "VPCpublicSubnet2DefaultRoute9ED4D6BC": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCpublicSubnet2RouteTable55DAB1BB"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "DependsOn": [
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/VPC/publicSubnet2/DefaultRoute"
      }
    },
    "VPCIGWB7E252D3": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "StreamingEtl/VPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/VPC/IGW"
      }
    },
    "VPCVPCGW99B986DC": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "InternetGatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/VPC/VPCGW"
      }
    },
    "ReplayRoleD94AFF0C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "ec2.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/ReplayRole/Resource"
      }
    },
    "ReplayRoleDefaultPolicy912FC29E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:PutRecord",
                "kinesis:PutRecords"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "InputStreamCFB159EA",
                  "Arn"
                ]
              }
            },
            {
              "Action": "kinesis:ListShards",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "InputStreamCFB159EA",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Bucket83908E77",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Bucket83908E77",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::aws-bigdata-blog"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::aws-bigdata-blog/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "cloudwatch:PutMetricData",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "kinesisanalytics:StartApplication",
                "kinesisanalytics:StopApplication",
                "kinesisanalytics:DescribeApplication",
                "kinesisanalytics:UpdateApplication"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kinesisanalytics:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":application/",
                    {
                      "Ref": "AWS::StackName"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ReplayRoleDefaultPolicy912FC29E",
        "Roles": [
          {
            "Ref": "ReplayRoleD94AFF0C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/ReplayRole/DefaultPolicy/Resource"
      }
    },
    "ProducerInstanceInstanceSecurityGroup809E00B3": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "StreamingEtl/ProducerInstance/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "/ProducerInstance"
                ]
              ]
            }
          }
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/ProducerInstance/InstanceSecurityGroup/Resource"
      }
    },
    "ProducerInstanceInstanceProfile4ABBC2A1": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "ReplayRoleD94AFF0C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/ProducerInstance/InstanceProfile"
      }
    },
    "ProducerInstance1BB510A3": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "IamInstanceProfile": {
          "Ref": "ProducerInstanceInstanceProfile4ABBC2A1"
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "c5n.large",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "ProducerInstanceInstanceSecurityGroup809E00B3",
              "GroupId"
            ]
          }
        ],
        "SubnetId": {
          "Ref": "VPCpublicSubnet1Subnet325F50B2"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "/ProducerInstance"
                ]
              ]
            }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\nyum install -y tmux jq java-11-amazon-corretto-headless\naws s3 cp --recursive --no-progress --exclude '*' --include 'amazon-kinesis-replay-*.jar' 's3://",
                {
                  "Ref": "Bucket83908E77"
                },
                "/target/' /tmp\naws --region ",
                {
                  "Ref": "AWS::Region"
                },
                " kinesisanalyticsv2 start-application --application-name ",
                {
                  "Ref": "KdaApplication"
                },
                " --run-configuration '{ \"ApplicationRestoreConfiguration\": { \"ApplicationRestoreType\": \"SKIP_RESTORE_FROM_SNAPSHOT\" } }'\n/opt/aws/bin/cfn-signal -e $? --stack ",
                {
                  "Ref": "AWS::StackName"
                },
                " --resource ProducerInstance1BB510A3 --region ",
                {
                  "Ref": "AWS::Region"
                }
              ]
            ]
          }
        }
      },
      "DependsOn": [
        "KdaApplication",
        "ReplayRoleDefaultPolicy912FC29E",
        "ReplayRoleD94AFF0C"
      ],
      "CreationPolicy": {
        "ResourceSignal": {
          "Timeout": "PT5M"
        }
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/ProducerInstance/Resource"
      }
    },
    "Dashboard9E4231ED": {
      "Type": "AWS::CloudWatch::Dashboard",
      "Properties": {
        "DashboardBody": {
          "Fn::Join": [
            "",
            [
              "{\"widgets\":[{\"type\":\"metric\",\"width\":24,\"height\":6,\"x\":0,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Kinesis data stream (incoming)\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/Kinesis\",\"IncomingRecords\",\"StreamName\",\"",
              {
                "Ref": "InputStreamCFB159EA"
              },
              "\",{\"period\":60,\"stat\":\"Sum\"}],[\"AWS/Kinesis\",\"IncomingBytes\",\"StreamName\",\"",
              {
                "Ref": "InputStreamCFB159EA"
              },
              "\",{\"period\":60,\"stat\":\"Sum\",\"yAxis\":\"right\"}]],\"yAxis\":{\"left\":{\"min\":0},\"right\":{\"min\":0}}}},{\"type\":\"metric\",\"width\":24,\"height\":6,\"x\":0,\"y\":6,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Kinesis data stream (outgoing)\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/Kinesis\",\"GetRecords.Records\",\"StreamName\",\"",
              {
                "Ref": "InputStreamCFB159EA"
              },
              "\",{\"period\":60,\"stat\":\"Sum\"}],[\"AWS/Kinesis\",\"GetRecords.Bytes\",\"StreamName\",\"",
              {
                "Ref": "InputStreamCFB159EA"
              },
              "\",{\"period\":60,\"stat\":\"Sum\",\"yAxis\":\"right\"}]],\"yAxis\":{\"left\":{\"min\":0},\"right\":{\"min\":0}}}},{\"type\":\"metric\",\"width\":24,\"height\":6,\"x\":0,\"y\":12,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Flink consumer lag\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/KinesisAnalytics\",\"millisBehindLatest\",\"Application\",\"",
              {
                "Ref": "KdaApplication"
              },
              "\",\"Flow\",\"Input\",\"Id\",\"",
              {
                "Fn::Join": [
                  "_",
                  {
                    "Fn::Split": [
                      "-",
                      {
                        "Ref": "InputStreamCFB159EA"
                      }
                    ]
                  }
                ]
              },
              "\",{\"period\":60,\"stat\":\"Maximum\"}],[\"AWS/KinesisAnalytics\",\"millisBehindLatest\",\"Application\",\"",
              {
                "Ref": "KdaApplication"
              },
              "\",\"Flow\",\"Input\",\"Id\",\"",
              {
                "Fn::Join": [
                  "_",
                  {
                    "Fn::Split": [
                      "-",
                      {
                        "Ref": "InputStreamCFB159EA"
                      }
                    ]
                  }
                ]
              },
              "\",{\"period\":60}]],\"yAxis\":{\"left\":{\"label\":\"milliseconds\",\"showUnits\":false,\"min\":0}}}},{\"type\":\"metric\",\"width\":24,\"height\":6,\"x\":0,\"y\":18,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Amazon S3 (incoming)\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"AWS/S3\",\"PutRequests\",\"BucketName\",\"",
              {
                "Ref": "Bucket83908E77"
              },
              "\",\"FilterId\",\"EntireBucket\",{\"period\":60,\"stat\":\"Sum\"}],[\"AWS/S3\",\"BytesUploaded\",\"BucketName\",\"",
              {
                "Ref": "Bucket83908E77"
              },
              "\",\"FilterId\",\"EntireBucket\",{\"period\":60,\"stat\":\"Sum\",\"yAxis\":\"right\"}]],\"yAxis\":{\"left\":{\"min\":0},\"right\":{\"min\":0}}}}]}"
            ]
          ]
        },
        "DashboardName": {
          "Ref": "AWS::StackName"
        }
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/Dashboard/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Modules": "aws-cdk=1.88.0,@aws-cdk/assets=1.85.0,@aws-cdk/aws-applicationautoscaling=1.85.0,@aws-cdk/aws-autoscaling=1.85.0,@aws-cdk/aws-autoscaling-common=1.85.0,@aws-cdk/aws-autoscaling-hooktargets=1.85.0,@aws-cdk/aws-cloudformation=1.85.0,@aws-cdk/aws-cloudwatch=1.85.0,@aws-cdk/aws-codebuild=1.85.0,@aws-cdk/aws-codecommit=1.85.0,@aws-cdk/aws-codeguruprofiler=1.85.0,@aws-cdk/aws-codepipeline=1.85.0,@aws-cdk/aws-codepipeline-actions=1.85.0,@aws-cdk/aws-ec2=1.85.0,@aws-cdk/aws-ecr=1.85.0,@aws-cdk/aws-ecr-assets=1.85.0,@aws-cdk/aws-ecs=1.85.0,@aws-cdk/aws-elasticloadbalancingv2=1.85.0,@aws-cdk/aws-events=1.85.0,@aws-cdk/aws-events-targets=1.85.0,@aws-cdk/aws-iam=1.85.0,@aws-cdk/aws-kinesis=1.85.0,@aws-cdk/aws-kinesisanalytics=1.85.0,@aws-cdk/aws-kms=1.85.0,@aws-cdk/aws-lambda=1.85.0,@aws-cdk/aws-logs=1.85.0,@aws-cdk/aws-s3=1.85.0,@aws-cdk/aws-s3-assets=1.85.0,@aws-cdk/aws-servicediscovery=1.85.0,@aws-cdk/aws-sns=1.85.0,@aws-cdk/aws-sns-subscriptions=1.85.0,@aws-cdk/aws-sqs=1.85.0,@aws-cdk/aws-ssm=1.85.0,@aws-cdk/cloud-assembly-schema=1.85.0,@aws-cdk/core=1.85.0,@aws-cdk/custom-resources=1.85.0,@aws-cdk/cx-api=1.85.0,@aws-cdk/region-info=1.85.0,jsii-runtime=node.js/v15.8.0"
      },
      "Metadata": {
        "aws:cdk:path": "StreamingEtl/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Outputs": {
    "OutputBucket": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://console.aws.amazon.com/s3/buckets/",
            {
              "Ref": "Bucket83908E77"
            },
            "/streaming-etl-output/"
          ]
        ]
      }
    },
    "ReplayCommand": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "java -jar /tmp/amazon-kinesis-replay-*.jar -streamName ",
            {
              "Ref": "InputStreamCFB159EA"
            },
            " -noWatermark -objectPrefix artifacts/kinesis-analytics-taxi-consumer/taxi-trips-partitioned.json.lz4/dropoff_year=2018/ -speedup 3600"
          ]
        ]
      }
    },
    "ConnectToInstance": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://console.aws.amazon.com/systems-manager/session-manager/",
            {
              "Ref": "ProducerInstance1BB510A3"
            }
          ]
        ]
      }
    },
    "CloudwatchDashboard": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://console.aws.amazon.com/cloudwatch/home#dashboards:name=",
            {
              "Ref": "AWS::StackName"
            }
          ]
        ]
      }
    },
    "CloudwatchLogsInsights": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://console.aws.amazon.com/cloudwatch/home#logs-insights:queryDetail=~(end~0~source~'",
            {
              "Ref": "KdaLogGroup88624CAF"
            },
            "~start~-3600~timeType~'RELATIVE~unit~'seconds)"
          ]
        ]
      }
    }
  },
  "Conditions": {
    "AwsCdkKinesisEncryptedStreamsUnsupportedRegions": {
      "Fn::Or": [
        {
          "Fn::Equals": [
            {
              "Ref": "AWS::Region"
            },
            "cn-north-1"
          ]
        },
        {
          "Fn::Equals": [
            {
              "Ref": "AWS::Region"
            },
            "cn-northwest-1"
          ]
        }
      ]
    },
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Parameters": {
    "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
      "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
    }
  }
}